{"version":3,"sources":["App.module.css","views/RegisterView.js"],"names":["module","exports","RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","className","s","App","onSubmit","autoComplete","field","type","onChange","React","Component","mapDispatchToProps","authOperations","register","connect"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,MAAQ,qB,0ICI3CC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAKC,MAAMC,WAAW,EAAKZ,OAC3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,uDAGvC,IAAD,EAC2BU,KAAKb,MAA/BC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SACbC,EAA+BS,KAA/BT,aAAcI,EAAiBK,KAAjBL,aACtB,OACE,sBAAKM,UAAWC,IAAEC,IAAlB,UACE,mDAEA,uBAAMC,SAAUT,EAAcU,aAAa,MAA3C,UACE,qBAAKJ,UAAWC,IAAEI,MAAlB,SACE,yCAEE,uBACEC,KAAK,OACLnB,KAAK,OACLK,MAAOL,EACPoB,SAAUjB,SAIhB,qBAAKU,UAAWC,IAAEI,MAAlB,SACE,0CAEE,uBACEC,KAAK,QACLnB,KAAK,QACLK,MAAOJ,EACPmB,SAAUjB,SAIhB,qBAAKU,UAAWC,IAAEI,MAAlB,SACE,6CAEE,uBACEC,KAAK,WACLnB,KAAK,WACLK,MAAOH,EACPkB,SAAUjB,SAIhB,wBAAQgB,KAAK,SAAb,oI,GA1DiBE,IAAMC,WAiE3BC,EAAqB,CACzBZ,WAAYa,IAAeC,UAGdC,sBAAQ,KAAMH,EAAdG,CAAkC5B","file":"static/js/5.1330194c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1KuX-\",\"field\":\"App_field__2Umc1\"};","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { authOperations } from \"../redux/auth\";\r\nimport s from \"../App.module.css\";\r\n\r\nclass RegisterView extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onRegister(this.state);\r\n    this.setState({ name: \"\", email: \"\", password: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n    const { handleChange, handleSubmit } = this;\r\n    return (\r\n      <div className={s.App}>\r\n        <h1>Registration page</h1>\r\n\r\n        <form onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <div className={s.field}>\r\n            <label>\r\n              name\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={name}\r\n                onChange={handleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className={s.field}>\r\n            <label>\r\n              email\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={handleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className={s.field}>\r\n            <label>\r\n              password\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={handleChange}\r\n              />\r\n            </label>\r\n          </div>\r\n          <button type=\"submit\">Зарегистрироваться</button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onRegister: authOperations.register,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterView);\r\n"],"sourceRoot":""}