{"version":3,"sources":["redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-reducer.js","copmonents/Auth/Auth.module.css","copmonents/UserMenu/UserMenu.module.css","copmonents/AppBar/AppBar.module.css","redux/contacts/contacts-actions.js","copmonents/Auth/Auth.js","icon/icon-login.png","copmonents/UserMenu/UserMenu.js","copmonents/AppBar/AppBar.js","copmonents/PrivateRoute/PrivateRoute.js","copmonents/PublicRoute/PublicRoute.js","App.js","reportWebVitals.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["actions","registerRequest","createAction","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","axios","defaults","baseURL","token","headers","common","Authorization","operations","register","credentials","dispatch","a","authActions","post","response","data","message","logOut","logIn","getCurrentUser","getState","persistedToken","auth","get","selectors","getIsAuthenticated","state","isAuthenticated","getUserName","user","name","initionalState","email","createReducer","_","payload","error","combineReducers","module","exports","fetchContactRequest","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","Auth","className","s","App","to","exat","link","activeClassName","activeStyle","mapDispatchToProps","onLogout","authOperations","connect","authSelectors","avatar","defaultAvatar","icon","src","alt","width","btn","type","onClick","AppBar","Component","component","redirectTo","routeProps","render","props","restricted","RegisterView","lazy","LoginView","ContactsView","this","onGetCurrentUser","fallback","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","items","filter","id","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactsReducer","devTools","process","allStore","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee135880.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nconst actions = {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n\r\nexport default actions;\r\n","import axios from \"axios\";\r\nimport authActions from \"./auth-actions\";\r\n\r\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = (credentials) => async (dispatch) => {\r\n  dispatch(authActions.registerRequest());\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = (credentials) => async (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n  try {\r\n    const response = await axios.post(\"/users/login\", credentials);\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n  dispatch(authActions.getCurrentUserRequest());\r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nconst operations = {\r\n  register,\r\n  logOut,\r\n  logIn,\r\n  getCurrentUser,\r\n};\r\nexport default operations;\r\n","const getIsAuthenticated = (state) => state.auth.isAuthenticated;\r\n\r\nconst getUserName = (state) => state.auth.user.name;\r\n\r\nconst selectors = {\r\n  getIsAuthenticated,\r\n  getUserName,\r\n};\r\nexport default selectors;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport authActions from \"./auth-actions\";\r\n\r\nconst initionalState = { name: null, email: null };\r\n\r\nconst user = createReducer(initionalState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initionalState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  user,\r\n  isAuthenticated,\r\n  token,\r\n  error,\r\n});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Auth_link__fEQik\",\"activeStyle\":\"Auth_activeStyle__FM48W\",\"App\":\"Auth_App__265Lk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"UserMenu_icon__qJ2jO\",\"btn\":\"UserMenu_btn__3Fb2a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppBar\":\"AppBar_AppBar__1PKTC\",\"link\":\"AppBar_link__3JvvS\"};","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\r\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\r\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const changeFilter = createAction(\"contacts/filter\");\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./Auth.module.css\";\r\n\r\nconst Auth = () => (\r\n  <div className={s.App}>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exat\r\n      className={s.link}\r\n      activeClassName={s.activeStyle}\r\n    >\r\n      Register\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exat\r\n      className={s.link}\r\n      activeClassName={s.activeStyle}\r\n    >\r\n      LogIn\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default Auth;\r\n","export default __webpack_public_path__ + \"static/media/icon-login.a7f69bf7.png\";","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors, authOperations } from \"../../redux/auth\";\r\nimport defaultAvatar from \"../../icon/icon-login.png\";\r\nimport s from \"./UserMenu.module.css\";\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div className={s.user}>\r\n    <img className={s.icon} src={avatar} alt=\"\" width=\"24\" />\r\n    <span> Welcome, {name} </span>\r\n    <button className={s.btn} type=\"button\" onClick={onLogout}>\r\n      Logout\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  name: authSelectors.getUserName(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  onLogout: authOperations.logOut,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Auth from \"../Auth/Auth\";\r\nimport UserMenu from \"../UserMenu/UserMenu\";\r\nimport { authSelectors } from \"../../redux/auth\";\r\nimport s from \"./AppBar.module.css\";\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <div className={s.AppBar}>\r\n    {isAuthenticated && (\r\n      <NavLink\r\n        className={s.link}\r\n        to=\"/contacts\"\r\n        exat\r\n        activeClassName={s.activeStyle}\r\n      >\r\n        Contacts\r\n      </NavLink>\r\n    )}\r\n    {isAuthenticated ? <UserMenu /> : <Auth />}\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(AppBar);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors } from \"../../redux/auth\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { authSelectors } from \"../../redux/auth\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React, { Suspense, lazy, Component } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport AppBar from \"./copmonents/AppBar/AppBar\";\nimport { authOperations } from \"./redux/auth\";\nimport { connect } from \"react-redux\";\nimport PrivateRoute from \"./copmonents/PrivateRoute/PrivateRoute\";\nimport PublicRoute from \"./copmonents/PublicRoute/PublicRoute\";\n\nconst RegisterView = lazy(() => import(\"./views/RegisterView\"));\nconst LoginView = lazy(() => import(\"./views/LoginView\"));\nconst ContactsView = lazy(() => import(\"./views/ContactsView\"));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n  render() {\n    return (\n      <>\n        <AppBar />\n        <Suspense fallback={<p>Загружаем...</p>}>\n          <Switch>\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo={\"/contacts\"}\n              component={RegisterView}\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo={\"/contacts\"}\n              component={LoginView}\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              component={ContactsView}\n              redirectTo=\"/login\"\n            />\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n} from \"./contacts-actions\";\r\n\r\nconst initionalState = [\r\n  // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n];\r\n\r\nconst items = createReducer(initionalState, {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport contactsReducer from \"../redux/contacts/contacts-reducer\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { authReducer } from \"../redux/auth\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\n// Асинхроный reducer\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst allStore = { store, persistor };\r\n\r\nexport default allStore;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}